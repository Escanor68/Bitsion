// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PersonasABM.Infrastructure.Data;

#nullable disable

namespace PersonasABM.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251007171455_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("PersonasABM.Domain.Entities.AtributoTipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<bool>("EsObligatorio")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("TipoDato")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("AtributoTipos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            Descripcion = "¿La persona maneja vehículos?",
                            EsObligatorio = false,
                            FechaCreacion = new DateTime(2025, 10, 7, 17, 14, 55, 101, DateTimeKind.Utc).AddTicks(5666),
                            Nombre = "Maneja",
                            TipoDato = "Booleano"
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            Descripcion = "¿La persona usa lentes correctivos?",
                            EsObligatorio = false,
                            FechaCreacion = new DateTime(2025, 10, 7, 17, 14, 55, 101, DateTimeKind.Utc).AddTicks(5756),
                            Nombre = "Usa Lentes",
                            TipoDato = "Booleano"
                        },
                        new
                        {
                            Id = 3,
                            Activo = true,
                            Descripcion = "¿La persona tiene diabetes?",
                            EsObligatorio = false,
                            FechaCreacion = new DateTime(2025, 10, 7, 17, 14, 55, 101, DateTimeKind.Utc).AddTicks(5794),
                            Nombre = "Es Diabético",
                            TipoDato = "Booleano"
                        },
                        new
                        {
                            Id = 4,
                            Activo = true,
                            Descripcion = "Tipo de sangre de la persona",
                            EsObligatorio = false,
                            FechaCreacion = new DateTime(2025, 10, 7, 17, 14, 55, 101, DateTimeKind.Utc).AddTicks(5832),
                            Nombre = "Tipo de Sangre",
                            TipoDato = "Texto"
                        });
                });

            modelBuilder.Entity("PersonasABM.Domain.Entities.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AtributosAdicionales")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Identificacion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("Identificacion")
                        .IsUnique();

                    b.ToTable("Personas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AtributosAdicionales = "{\"Maneja\": true, \"Usa Lentes\": false, \"Es Diabético\": false, \"Tipo de Sangre\": \"O+\"}",
                            Edad = 35,
                            Estado = "Activo",
                            FechaCreacion = new DateTime(2025, 10, 7, 17, 14, 55, 101, DateTimeKind.Utc).AddTicks(6103),
                            Genero = "Masculino",
                            Identificacion = "12345678",
                            NombreCompleto = "Juan Pérez García"
                        },
                        new
                        {
                            Id = 2,
                            AtributosAdicionales = "{\"Maneja\": true, \"Usa Lentes\": true, \"Es Diabético\": true, \"Tipo de Sangre\": \"A+\"}",
                            Edad = 28,
                            Estado = "Activo",
                            FechaCreacion = new DateTime(2025, 10, 7, 17, 14, 55, 101, DateTimeKind.Utc).AddTicks(6152),
                            Genero = "Femenino",
                            Identificacion = "87654321",
                            NombreCompleto = "María López Rodríguez"
                        });
                });

            modelBuilder.Entity("PersonasABM.Domain.Entities.PersonaAtributo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AtributoTipoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("AtributoTipoId");

                    b.HasIndex("PersonaId");

                    b.ToTable("PersonaAtributos");
                });

            modelBuilder.Entity("PersonasABM.Domain.Entities.PersonaAtributo", b =>
                {
                    b.HasOne("PersonasABM.Domain.Entities.AtributoTipo", "AtributoTipo")
                        .WithMany("PersonaAtributos")
                        .HasForeignKey("AtributoTipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PersonasABM.Domain.Entities.Persona", "Persona")
                        .WithMany("PersonaAtributos")
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AtributoTipo");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("PersonasABM.Domain.Entities.AtributoTipo", b =>
                {
                    b.Navigation("PersonaAtributos");
                });

            modelBuilder.Entity("PersonasABM.Domain.Entities.Persona", b =>
                {
                    b.Navigation("PersonaAtributos");
                });
#pragma warning restore 612, 618
        }
    }
}
